#ifndef TSMS_GPIO_H
#define TSMS_GPIO_H

#include "tsms.h"

struct TSMS_GPIO_HANDLER {
#ifdef TSMS_STM32_GPIO
	GPIO_TypeDef * port;
	uint16_t pin;
#endif
};

typedef struct TSMS_GPIO_HANDLER *TSMS_GPIO_HANDLER_POINTER;
typedef TSMS_GPIO_HANDLER_POINTER TSMS_GHP;

typedef enum {
	TSMS_GPIO_LOW = 0, TSMS_GPIO_HIGH, TSMS_GPIO_ERROR
} TSMS_GPIO_STATUS;

typedef enum {
	TSMS_GPIO_OUTPUT_OPEN_DRAIN, TSMS_GPIO_OUTPUT_OD, TSMS_GPIO_OUTPUT_PULL_PUSH, TSMS_GPIO_OUTPUT_PP, TSMS_GPIO_INPUT
} TSMS_GPIO_MODE;

typedef enum {
	TSMS_GPIO_PULL_UP, TSMS_GPIO_PULL_DOWN, TSMS_GPIO_NO_PULL
} TSMS_GPIO_PULL;

#define TSMS_NULL_GHP (TSMS_GHP)TSMS_NULL

#ifdef TSMS_STM32_GPIO

TSMS_GHP TSMS_GPIO_createHandler(GPIO_TypeDef * port, uint16_t pin);

#endif

TSMS_RESULT TSMS_GPIO_write(TSMS_GHP gpio, TSMS_GPIO_STATUS status);

TSMS_GPIO_STATUS TSMS_GPIO_read(TSMS_GHP gpio);

TSMS_RESULT TSMS_GPIO_release(TSMS_GHP gpio);

TSMS_RESULT TSMS_GPIO_setMode(TSMS_GHP gpio, TSMS_GPIO_MODE mode, TSMS_GPIO_PULL pull);

#endif //TSMS_GPIO_H
